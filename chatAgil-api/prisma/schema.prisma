// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  name           String
  email          String     @unique
  hashedPassword String
  status         UserStatus @default(OFFLINE)
  createdAt      DateTime   @default(now())

  message      Message[]
  room         Room[]         @relation("roomsToUsers")
  conversation Conversation[]
}

model Message {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  roomId Int?
  room   Room? @relation(fields: [roomId], references: [id])

  conversationId Int?
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
}

model Room {
  id        Int      @id @default(autoincrement())
  name      String
  password  String?
  createdAt DateTime @default(now())

  users User[] @relation("roomsToUsers")

  Message Message[]
}

model Conversation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  participants User[]
  messages     Message[]
}

enum UserStatus {
  ONLINE
  OFFLINE
}
